######### batu 2024/3/2 9:00pm

    Summary:
        # 1 Fixed few typos in DOCS
        # 2 Still reading and learning Docs and calendars, calendarmath

########## batu 2024/3/4 9:00 AM EST

    Name                                 Stmts   Miss  Cover   Missing
------------------------------------------------------------------
dateroll/__init__.py                     4      0   100%
dateroll/calendars/__init__.py           0      0   100%
dateroll/calendars/calendarmath.py     199     92    54%   79-83, 118-119, 136, 172-196, 202, 222-227, 233-237, 244-249, 267, 277-290, 297-319, 325, 331-359
dateroll/calendars/calendars.py        148      0   100%
dateroll/date/__init__.py                0      0   100%
dateroll/date/date.py                  107      8    93%   35, 38, 120, 127-129, 134, 164
dateroll/ddh/__init__.py                 0      0   100%
dateroll/ddh/ddh.py                     20      3    85%   29, 38-39
dateroll/duration/__init__.py            0      0   100%
dateroll/duration/duration.py          250    133    47%   129, 135-153, 158, 162-167, 173-179, 182-187, 209, 213, 217, 221, 229, 241-244, 251, 255, 269-278, 284-294, 300-301, 328, 344-361, 365-368, 383-445, 449, 458, 467-468, 473, 478, 493, 497, 501, 505, 508-509, 512, 521-529
dateroll/parser/__init__.py              0      0   100%
dateroll/parser/parser.py               65     23    65%   102, 105, 129, 143, 152-183, 187
dateroll/parser/parsers.py              98     23    77%   26-31, 36, 54, 59-66, 92-95, 123, 128, 190, 193, 202, 207
dateroll/parser/patterns.py             37      0   100%
dateroll/schedule/__init__.py            0      0   100%
dateroll/schedule/schedule.py            1      0   100%
dateroll/tests/__init__.py               0      0   100%
dateroll/tests/calendarmath.py          25      1    96%   142
dateroll/tests/calendars.py            145      1    99%   252
dateroll/tests/date.py                 126      3    98%   138, 149, 197
dateroll/tests/ddh.py                   33      8    76%   62-65, 71-72, 83, 87
dateroll/tests/duration.py               8      1    88%   11
dateroll/tests/operations.py             8      1    88%   48
dateroll/tests/parser.py                 8      1    88%   11
dateroll/tests/parsers.py                8      1    88%   11
dateroll/tests/patterns.py              11      1    91%   17
dateroll/tests/schedule.py               8      1    88%   11
dateroll/tests/suite.py                 28      0   100%
dateroll/utils.py                       17      0   100%
------------------------------------------------------------------
TOTAL                                 1354    301    78%

    Summary:
        # 1 Learning the code (in progress)
        # 2 Added TestSuite in suite.py and run coverage.py
        # 3 Made calendar unittests 100%
    
Name                                 Stmts   Miss  Cover   Missing
------------------------------------------------------------------
dateroll/__init__.py                     4      0   100%
dateroll/calendars/__init__.py           0      0   100%
dateroll/calendars/calendarmath.py     178     14    92%   147, 188, 196, 199-202, 222, 299, 315, 323, 331, 333, 344, 350
dateroll/calendars/calendars.py        148      0   100%
dateroll/date/__init__.py                0      0   100%
dateroll/date/date.py                  107      8    93%   35, 38, 120, 127-129, 134, 164
dateroll/ddh/__init__.py                 0      0   100%
dateroll/ddh/ddh.py                     20      3    85%   29, 38-39
dateroll/duration/__init__.py            0      0   100%
dateroll/duration/duration.py          250    133    47%   129, 135-153, 158, 162-167, 173-179, 182-187, 209, 213, 217, 221, 229, 241-244, 251, 255, 269-278, 284-294, 300-301, 328, 344-361, 365-368, 383-445, 449, 458, 467-468, 473, 478, 493, 497, 501, 505, 508-509, 512, 521-529
dateroll/parser/__init__.py              0      0   100%
dateroll/parser/parser.py               65     23    65%   102, 105, 129, 143, 152-183, 187
dateroll/parser/parsers.py              98     23    77%   26-31, 36, 54, 59-66, 92-95, 123, 128, 190, 193, 202, 207
dateroll/parser/patterns.py             37      0   100%
dateroll/schedule/__init__.py            0      0   100%
dateroll/schedule/schedule.py            1      0   100%
dateroll/tests/__init__.py               0      0   100%
dateroll/tests/calendarmath.py         100      1    99%   247
dateroll/tests/calendars.py            145      1    99%   252
dateroll/tests/date.py                 126      3    98%   138, 149, 197
dateroll/tests/ddh.py                   33      8    76%   62-65, 71-72, 83, 87
dateroll/tests/duration.py               8      1    88%   11
dateroll/tests/operations.py             8      1    88%   48
dateroll/tests/parser.py                 8      1    88%   11
dateroll/tests/parsers.py                8      1    88%   11
dateroll/tests/patterns.py              11      1    91%   17
dateroll/tests/schedule.py               8      1    88%   11
dateroll/tests/suite.py                 28      0   100%
dateroll/utils.py                       17      0   100%
------------------------------------------------------------------
TOTAL                                 1408    223    84%

    Summary:
        # 1 Fixed some bugs in calendarmath
        # 2 Still in the progress of calendarmath where the unittest is 92%




########## anthony 3/5/24 9AM

Code review:


dateroll/calendars/calendarmath.py:

120-125:

# print('in backend0')
# code.interact(local=dict(globals(),**locals()))
if not self.home.exists():
    # print('in backend')
    # code.interact(local=dict(globals(),**locals()))
same for 1774-176

I understand you add prints and test /debugging comments, code, interact, but WHEN do we remove them?
we cannot allow commented out print and code.interact to be on github, it add clutter and will confuse people trying to udnerstand the code

A) before each each commit? , B) before a merge? C) other?

### I usually remove them when code is ready, I can remove then before each commit

sorted_all = sorted(all)

1 - Can you sort ALL in calendars.py, so it doesn't need to be sorted here?

    ### batu-got it

dates = [t for t in dates if t>=sorted_all[0]]
^ this does nothing (items in a sorted list are >= the first value)

### batu-there were dates < first date of ALL

180 def add_bd(self, d, n, cals, mod=False, sign=1):

why did you add a new kwarg for sign? can't n be negative?

### when n=0 it needed to be handled correctly, I would remove sign


ef is_bd(self, d, cals='WE'):

You added default cals = 'WE', i understand why you did it, but i it seems "unclean", maybe we keep global for "default calendars"?

### yes lets do global default calendars

you forgot to uncomment these lines in is_bd,

# cal_name = self.union_swap(cals)
# return d



^^ same, no return in prev_bd... is this because it is a work in progress?

### yes work in progress

Question for union_swap, i think we need to document / rewrite this,   logic is non-obivous, let's discuss


################## batu 2024/3/6 10 AM EST

Name                                 Stmts   Miss  Cover   Missing
------------------------------------------------------------------
dateroll/__init__.py                     4      0   100%
dateroll/calendars/__init__.py           0      0   100%
dateroll/calendars/calendarmath.py     176      0   100%
dateroll/calendars/calendars.py        149      0   100%
dateroll/date/__init__.py                0      0   100%
dateroll/date/date.py                  107      8    93%   35, 38, 120, 127-129, 134, 164
dateroll/ddh/__init__.py                 0      0   100%
dateroll/ddh/ddh.py                     20      3    85%   29, 38-39
dateroll/duration/__init__.py            0      0   100%
dateroll/duration/duration.py          258    134    48%   130, 140, 144-149, 155-161, 164-169, 182-202, 209, 211, 231, 235, 239, 243, 251, 263-266, 273, 277, 291-300, 306-316, 322-323, 350, 366-383, 387-390, 405-467, 471, 480, 489-490, 495, 500, 515, 519, 523, 527, 530-531, 534, 543-551
dateroll/parser/__init__.py              0      0   100%
dateroll/parser/parser.py               65     23    65%   102, 105, 129, 143, 152-183, 187
dateroll/parser/parsers.py             104     28    73%   27-32, 37, 55, 60-67, 93-96, 124, 129, 138-143, 201, 204, 213, 218
dateroll/parser/patterns.py             29      0   100%
dateroll/schedule/__init__.py            0      0   100%
dateroll/schedule/schedule.py            1      0   100%
dateroll/tests/__init__.py               0      0   100%
dateroll/tests/calendarmath.py         164      1    99%   355
dateroll/tests/calendars.py            145      1    99%   252
dateroll/tests/date.py                 126      3    98%   138, 149, 197
dateroll/tests/ddh.py                   33      8    76%   62-65, 71-72, 83, 87
dateroll/tests/duration.py               8      1    88%   11
dateroll/tests/operations.py             8      1    88%   48
dateroll/tests/parser.py                 8      1    88%   11
dateroll/tests/parsers.py                8      1    88%   11
dateroll/tests/patterns.py              11      1    91%   17
dateroll/tests/schedule.py               8      1    88%   11
dateroll/tests/suite.py                 28      0   100%
dateroll/utils.py                       17      0   100%
------------------------------------------------------------------
TOTAL                                 1477    215    85%

    Summary:
        #1 Made calendar and calendarmath 100% (though we need to add usage tests to test all permutations)
        #2 Implemented nex_bd and prev_bd in calendarmath

    TODO:
        #1 Need to add mod in calendarmath


################## anthony march 6 3pm


4 commands:
    coverage run --omit="dateroll/tests/*.py" -m unittest discover
    coverage report -m 
    coverage html
    xdg-open htmlcov/index.html

^ notice 2 things, --omit excludes the test files, and html/xdg-open give pretty report!

Name                                 Stmts   Miss  Cover   Missing
------------------------------------------------------------------
dateroll/__init__.py                     4      0   100%
dateroll/calendars/__init__.py           0      0   100%
dateroll/calendars/calendarmath.py     178      3    98%   89, 258, 269
dateroll/calendars/calendars.py        149      0   100%
dateroll/date/__init__.py                0      0   100%
dateroll/date/date.py                  108      8    93%   38, 120, 127-129, 134, 164, 193
dateroll/ddh/__init__.py                 0      0   100%
dateroll/ddh/ddh.py                     21      3    86%   29, 38-39
dateroll/duration/__init__.py            0      0   100%
dateroll/duration/duration.py          260    135    48%   130, 140, 144-149, 155-161, 164-169, 182-202, 209, 211, 231, 235, 239, 243, 251, 263-266, 273, 277, 291-300, 306-316, 322-323, 350, 366-383, 387-390, 405-467, 471, 480, 489-490, 495, 500, 515, 519, 523, 527, 530, 534, 543-551, 558
dateroll/parser/__init__.py              0      0   100%
dateroll/parser/parser.py               64     21    67%   102, 105, 129, 152-179, 187
dateroll/parser/parsers.py             104     26    75%   27-32, 55, 60-67, 93-96, 124, 129, 138-143, 201, 204, 218
dateroll/parser/patterns.py             29      0   100%
dateroll/schedule/__init__.py            0      0   100%
dateroll/schedule/schedule.py            1      0   100%
dateroll/utils.py                       17      0   100%
------------------------------------------------------------------
TOTAL                                  935    196    79%


@batu, i get different results for calendarmath.py

please switch to the new thing
/home/amalizzio/github/dateroll/dateroll/tests/suite.py:27: DeprecationWarning: unittest.makeSuite() is deprecated and will be removed in Python 3.13. Please use unittest.TestLoader.loadTestsFromTestCase() instead.

we need to implement better public/private member names

class A:
    def public(self):
        ...
    def _private(self):
        ...

^ public means it will not be called manually by a user ever

private functions only need to be tested in the unique way they are called
public functions need rigorious testing of many possible arg/kwarg permutations

you do not and shouldn't comment out your __main__ blocks:
https://stackoverflow.com/questions/64611388/exclude-a-function-from-coverage

if __name__ == '__main__': # pragma: no cover
    pass


############ batu 2024/3/7 7:30 AM EST
Name                                 Stmts   Miss  Cover   Missing
------------------------------------------------------------------
dateroll/__init__.py                     4      0   100%
dateroll/calendars/__init__.py           0      0   100%
dateroll/calendars/calendarmath.py     184      0   100%
dateroll/calendars/calendars.py        159      0   100%
dateroll/date/__init__.py                0      0   100%
dateroll/date/date.py                  103      0   100%
dateroll/ddh/__init__.py                 0      0   100%
dateroll/ddh/ddh.py                     28      0   100%
dateroll/duration/__init__.py            0      0   100%
dateroll/duration/duration.py          283     15    95%   495, 504, 537, 541, 544-545, 548, 563, 568-569, 573, 581-584
dateroll/parser/__init__.py              0      0   100%
dateroll/parser/parser.py               66     22    67%   102, 105, 129, 154-185, 189
dateroll/parser/parsers.py             105     12    89%   32, 55, 67, 94-97, 125, 130, 144, 202, 205, 219
dateroll/parser/patterns.py             29      0   100%
dateroll/schedule/__init__.py            0      0   100%
dateroll/schedule/schedule.py            1      0   100%
dateroll/utils.py                       17      0   100%
------------------------------------------------------------------
TOTAL                                  979     49    95%

    Summary:
        #1 Duration 95 pct
        #2 Fixed related bugs
    
    Question:
        #1 I made y,m,w,d = 0 when it is needed NOT None 
            because it caused a problem Date(2024,3,15) - Date(2024,3,1) which will give me y=None,m=None,w=None, d=14 and I could not
            compare this duration with dateutile.relativedelta where y=0,m=0,w=0,d=14
            As a result, always m=0 when I initialize duration, e.g Duration(d=14)--> Duration(m=0,d=14) because of the line 151:154
            (i changed None to 0) if we put None there, Date(2024,3,15) - Date(2024,3,1)--> y=0,m=None,w=0,d=14 which cause problem


############ anthony 2024/3/7 9AM

I get 4 failures in test_calendarmath Did all the test pass on your side before you ran the coverage report?


Our reports were different, i think its a version issue, here's mine as of 5pm today:

Name                                 Stmts   Miss  Cover   Missing
------------------------------------------------------------------
dateroll/__init__.py                     4      0   100%
dateroll/calendars/__init__.py           0      0   100%
dateroll/calendars/calendarmath.py     186      7    96%   89, 261-265, 284-287
dateroll/calendars/calendars.py        159      8    95%   207-216
dateroll/date/__init__.py                0      0   100%
dateroll/date/date.py                  104      0   100%
dateroll/ddh/__init__.py                 0      0   100%
dateroll/ddh/ddh.py                     29      0   100%
dateroll/duration/__init__.py            0      0   100%
dateroll/duration/duration.py          253     16    94%   215, 414, 423, 456, 460, 463, 467, 482, 487-488, 492, 518-523
dateroll/parser/__init__.py              0      0   100%
dateroll/parser/parser.py               65     21    68%   102, 105, 129, 154-181, 189
dateroll/parser/parsers.py             105     12    89%   32, 55, 67, 94-97, 125, 130, 144, 202, 205, 219
dateroll/parser/patterns.py             29      0   100%
dateroll/schedule/__init__.py            0      0   100%
dateroll/schedule/schedule.py            1      0   100%
dateroll/utils.py                       17      0   100%
------------------------------------------------------------------
TOTAL                                  952     64    93%


Question on zero vs none, that's good, i finished the changes.

############ batu 2024/3/8 9 AM EST
Name                                 Stmts   Miss  Cover   Missing
------------------------------------------------------------------
dateroll/__init__.py                     4      0   100%
dateroll/calendars/__init__.py           0      0   100%
dateroll/calendars/calendarmath.py     182      0   100%
dateroll/calendars/calendars.py        151      0   100%
dateroll/date/__init__.py                0      0   100%
dateroll/date/date.py                  105      0   100%
dateroll/ddh/__init__.py                 0      0   100%
dateroll/ddh/ddh.py                     29      0   100%
dateroll/duration/__init__.py            0      0   100%
dateroll/duration/duration.py          251      0   100%
dateroll/parser/__init__.py              0      0   100%
dateroll/parser/parser.py               67      5    93%   164, 169, 174, 182, 190
dateroll/parser/parsers.py             103      0   100%
dateroll/parser/patterns.py             29      0   100%
dateroll/schedule/__init__.py            0      0   100%
dateroll/schedule/schedule.py           12      0   100%
dateroll/utils.py                       17      0   100%
------------------------------------------------------------------
TOTAL                                  950      5    99%

    Summary:

        #1 Duration and parsers 100%
        #2 Little bit wrote on Schedule to pass parser test maybe_many_parts
    
    Question:
        dateutil.relativedelta days does not include its week, e.g, w=2, days=15 means days 15, NOT 7*2+15
        which is different than our Duration where  w=2, days=15 means days 15, 7*2+15
        to fix this problem I changed date.py/sub line 145 and duration.py/__eq__/ line:208,please review this patterns

        i did some testing and the behavior is not exactly this.

        rd behavior is WRONG, there is a bug in relative delta, .weeks is exact to set, but approx to use, and no warning
        we keep weeks as auxilary, and when comparing days*7 in days. so we are good
        can you write enough test cases to cover this functionality?

        that means we should add weeks back as regular, and not auxliary/helpers, repr can show weeks for us


    PS: While testing, as I learn about the design, so good and easy to understand

    ############ batu 2024/3/8 9 AM EST

    again i didn't 100% pass on the first pull, i commented out your test cases that were failing, can you pleae put more specific comments on what your test cases are testing? it wasn't obvious.

    there was a lot of bugs and non-handled cases. 

    Did you figure out the mutated test and the bck.pop ?? they are still showing as missing on my side. 

    I have a feeling were are not following the same workflow and have to reset again.
    PS: While testing, as I learn about the design, so good and easy to understand

    
    


############ batu 2024/3/8 9 AM EST
Name                                 Stmts   Miss  Cover   Missing
------------------------------------------------------------------
dateroll/__init__.py                     4      0   100%
dateroll/calendars/__init__.py           0      0   100%
dateroll/calendars/calendarmath.py     182      0   100%
dateroll/calendars/calendars.py        151      0   100%
dateroll/date/__init__.py                0      0   100%
dateroll/date/date.py                  105      0   100%
dateroll/ddh/__init__.py                 0      0   100%
dateroll/ddh/ddh.py                     29      0   100%
dateroll/duration/__init__.py            0      0   100%
dateroll/duration/duration.py          251      0   100%
dateroll/parser/__init__.py              0      0   100%
dateroll/parser/parser.py               67      5    93%   164, 169, 174, 182, 190
dateroll/parser/parsers.py             103      0   100%
dateroll/parser/patterns.py             29      0   100%
dateroll/schedule/__init__.py            0      0   100%
dateroll/schedule/schedule.py           12      0   100%
dateroll/utils.py                       17      0   100%
------------------------------------------------------------------
TOTAL                                  950      5    99%

    Summary:

        #1 Duration and parsers 100%
        #2 Little bit wrote on Schedule to pass parser test maybe_many_parts
    
    Question:
        dateutil.relativedelta days does not include its week, e.g, w=2, days=15 means days 15, NOT 7*2+15
        which is different than our Duration where  w=2, days=15 means days 15, 7*2+15
        to fix this problem I changed date.py/sub line 145 and duration.py/__eq__/ line:208,please review this patterns

    PS: While testing, as I learn about the design, so good and easy to understand

    ############ batu 2024/3/8 9 AM EST


    we can compare eachothers code changes with github:

    use this link:

    https://github.com/disentcorp/dateroll/compare/batu_dev...dev

    you can review our changes each day, and we can review your changes each day

    question - weeks implementaiton in relativedelta is wrong, i absorb weeks=N into days+=weeks*7 now, and ignore everywhere else

        Name                                 Stmts   Miss  Cover   Missing
    ------------------------------------------------------------------
    dateroll/__init__.py                     4      0   100%
    dateroll/calendars/__init__.py           0      0   100%
    dateroll/calendars/calendarmath.py     182      0   100%
    dateroll/calendars/calendars.py        151      0   100%
    dateroll/date/__init__.py                0      0   100%
    dateroll/date/date.py                  105      0   100%
    dateroll/ddh/__init__.py                 0      0   100%
    dateroll/ddh/ddh.py                     29      0   100%
    dateroll/duration/__init__.py            0      0   100%
    dateroll/duration/duration.py          322      0   100%
    dateroll/parser/__init__.py              0      0   100%
    dateroll/parser/parser.py               66      2    97%   180, 188
    dateroll/parser/parsers.py             103      0   100%
    dateroll/parser/patterns.py             29      0   100%
    dateroll/schedule/__init__.py            0      0   100%
    dateroll/schedule/schedule.py           23      6    74%   11, 23-27
    dateroll/utils.py                       17      0   100%
    ------------------------------------------------------------------
    TOTAL                                 1031      8    99%


    after 100% we need to answer 2 questions:

    1 - what tests are missing?
    2 - what features are missing?

    please reads docs

    not complete from my side, but you can start implementing

    1 - missing tests:
        users tests from ddh
        practice add/sub examples
        
        /F
            sat + 0bd, mon is holiday
            sat + 0bd, fri is holiday
            sun + 0bd, mon is holiday
            sun + 0bd, fri is holiday
            sat - 0bd, mon is holiday
            sat - 0bd, fri is holiday
            sun - 0bd, mon is holiday
            sun - 0bd, fri is holiday
            sat + 0bd, mon is 1st of next month
            sat + 0bd, fri is last of prevous month
            sun + 0bd, mon is 1st of next month
            sun + 0bd, fri is last of previous month
            sat - 0bd, mon is 1st of next month
            sat - 0bd, fri is last of prevous month
            sun - 0bd, mon is 1st of next month
            sun - 0bd, fri is last of previous month
        /P
            sat + 0bd, mon is holiday
            sat + 0bd, fri is holiday
            sun + 0bd, mon is holiday
            sun + 0bd, fri is holiday
            sat - 0bd, mon is holiday
            sat - 0bd, fri is holiday
            sun - 0bd, mon is holiday
            sun - 0bd, fri is holiday
            sat + 0bd, mon is 1st of next month
            sat + 0bd, fri is last of prevous month
            sun + 0bd, mon is 1st of next month
            sun + 0bd, fri is last of previous month
            sat - 0bd, mon is 1st of next month
            sat - 0bd, fri is last of prevous month
            sun - 0bd, mon is 1st of next month
            sun - 0bd, fri is last of previous month
        /MF
            sat + 0bd, mon is holiday
            sat + 0bd, fri is holiday
            sun + 0bd, mon is holiday
            sun + 0bd, fri is holiday
            sat - 0bd, mon is holiday
            sat - 0bd, fri is holiday
            sun - 0bd, mon is holiday
            sun - 0bd, fri is holiday
            sat + 0bd, mon is 1st of next month
            sat + 0bd, fri is last of prevous month
            sun + 0bd, mon is 1st of next month
            sun + 0bd, fri is last of previous month
            sat - 0bd, mon is 1st of next month
            sat - 0bd, fri is last of prevous month
            sun - 0bd, mon is 1st of next month
            sun - 0bd, fri is last of previous month
        /MP
            sat + 0bd, mon is holiday
            sat + 0bd, fri is holiday
            sun + 0bd, mon is holiday
            sun + 0bd, fri is holiday
            sat - 0bd, mon is holiday
            sat - 0bd, fri is holiday
            sun - 0bd, mon is holiday
            sun - 0bd, fri is holiday
            sat + 0bd, mon is 1st of next month
            sat + 0bd, fri is last of prevous month
            sun + 0bd, mon is 1st of next month
            sun + 0bd, fri is last of previous month
            sat - 0bd, mon is 1st of next month
            sat - 0bd, fri is last of prevous month
            sun - 0bd, mon is 1st of next month
            sun - 0bd, fri is last of previous month

        Date comparisons (i did Duration comparisons already)
            date1 > date2
            date1 >= date2
            date1 == date2
            date1 < date2
            date1 <= date2


        we need some leap year scenarios
        leap year with holidays

        we can make a calendar where only 20 days are NOT HOLIDAYS
        and make sure it 'jumps' around correctly  (need to ensure that leap is handled by dateutil and datetime via inheritance, so only a few tests)

        schedule testing
            backwards no stub
            forwards no stub
            backwards stub
            forwards stub

    2 - features

        inclusion/exclusion rules for Duration 
        stubs for schedules
        schedule returns list of lists .lists property  # we have .dates propery for list of dates, i changed name from range, because range should be a generator function, and i don't think we need to do a generator yet
        schedule returns dataframe .df property
        daycounters